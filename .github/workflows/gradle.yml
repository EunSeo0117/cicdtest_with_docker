name: deploy to development server

on:
  push:
    branches: [ "develop" ]
    
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      
    steps:
    - name: 체크아웃
      uses: actions/checkout@v4
    
    - name: JDK 21 설정
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Gradle Wrapper 실행권한 추가
      run: chmod +x ./cicd/gradlew

    - name: Initialize Gradle Project
      run: ./cicd/gradlew init  # Gradle 프로젝트 초기화

    - name: Build with Gradle(최적화 모드)
      uses: gradle/gradle-build-action@v2
      with:
        gradle-executable: ./cicd/gradlew  # gradlew 경로 지정
        arguments: build -x test

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 도커허브 로그인
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: timestamp 생성
      id: timestamp
      run: echo "tag=$(date + '%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT

    - name: 도커이미지 build & push
      uses: docker/build-push-action@v5
      with:
        context: .
        file: cicd/Dockerfile.dev
        push: true
        tag: ${{ secrets.DOCKER_HUB_USERNAME }}/spring-app:${{ steps.timestamp.outputs.tag }}, 
             ${{secrets.DOCKER_HUB_USERNAME }}/spring-app:latest

    - name: 서버에 접속후 배포
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          export TAG=${{ steps.timestamp.outputs.tag }}
          export DOCKER_USERNAME=${{ secrets.DOCKER_HUB_USERNAME }}
          cd /app
          docker-compose pull
          docker-compose down
          docker-compose up -d
          docker-compose prune -f



   
